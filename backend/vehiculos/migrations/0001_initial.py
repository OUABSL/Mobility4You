# Generated by Django 5.1.9 on 2025-07-11 16:32

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import vehiculos.models
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'db_table': 'categoria',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='GrupoCoche',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre')),
                ('edad_minima', models.PositiveSmallIntegerField(default=21, validators=[django.core.validators.MinValueValidator(18), django.core.validators.MaxValueValidator(99)], verbose_name='Edad mínima')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Grupo de coche (catalogue)',
                'verbose_name_plural': 'Grupos de coches (catalogue)',
                'db_table': 'grupo_coche',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Vehiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('combustible', models.CharField(choices=[('Gasolina', 'Gasolina'), ('Diesel', 'Diésel'), ('Híbrido', 'Híbrido'), ('Eléctrico', 'Eléctrico')], max_length=20, verbose_name='Combustible')),
                ('marca', models.CharField(max_length=100, verbose_name='Marca')),
                ('modelo', models.CharField(max_length=100, verbose_name='Modelo')),
                ('matricula', models.CharField(max_length=20, unique=True, verbose_name='Matrícula')),
                ('anio', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2030)], verbose_name='Año')),
                ('color', models.CharField(max_length=50, verbose_name='Color')),
                ('num_puertas', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(5)], verbose_name='Número de puertas')),
                ('num_pasajeros', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(9)], verbose_name='Número de pasajeros')),
                ('capacidad_maletero', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Capacidad maletero (L)')),
                ('disponible', models.BooleanField(default=False, verbose_name='Disponible')),
                ('activo', models.BooleanField(default=False, verbose_name='Activo')),
                ('notas_internas', models.TextField(blank=True, null=True, verbose_name='Notas internas')),
                ('fianza', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Fianza')),
                ('kilometraje', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Kilometraje')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='vehiculos', to='vehiculos.categoria')),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='vehiculos', to='vehiculos.grupocoche')),
            ],
            options={
                'verbose_name': 'Vehículo',
                'verbose_name_plural': 'Vehículos',
                'db_table': 'vehiculo',
                'ordering': ['marca', 'modelo'],
            },
        ),
        migrations.CreateModel(
            name='TarifaVehiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha de inicio')),
                ('fecha_fin', models.DateField(blank=True, help_text='Dejar en blanco para tarifa indefinida', null=True, verbose_name='Fecha de fin')),
                ('precio_dia', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Precio por día')),
                ('vehiculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tarifas', to='vehiculos.vehiculo')),
            ],
            options={
                'verbose_name': 'Tarifa de vehículo',
                'verbose_name_plural': 'Tarifas de vehículos',
                'db_table': 'tarifa_vehiculo',
            },
        ),
        migrations.CreateModel(
            name='Mantenimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha')),
                ('tipo_servicio', models.CharField(max_length=200, verbose_name='Tipo de servicio')),
                ('coste', models.DecimalField(decimal_places=2, help_text='Coste del servicio de mantenimiento: Se puede dejar en blanco si se desea.', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Coste')),
                ('notas', models.TextField(blank=True, default='', verbose_name='Notas')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('vehiculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mantenimientos', to='vehiculos.vehiculo')),
            ],
            options={
                'verbose_name': 'Mantenimiento',
                'verbose_name_plural': 'Mantenimientos',
                'db_table': 'mantenimiento',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='ImagenVehiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagen', models.ImageField(blank=True, help_text='Imagen del vehículo que se guardará en la carpeta especificada', null=True, upload_to=vehiculos.models.imagen_vehiculo_upload_path, verbose_name='Imagen del vehículo')),
                ('portada', models.BooleanField(default=False, verbose_name='¿Es Imagen de portada?')),
                ('ancho', models.PositiveIntegerField(blank=True, null=True, verbose_name='Ancho')),
                ('alto', models.PositiveIntegerField(blank=True, null=True, verbose_name='Alto')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('vehiculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imagenes', to='vehiculos.vehiculo')),
            ],
            options={
                'verbose_name': 'Imagen de vehículo',
                'verbose_name_plural': 'Imágenes de vehículos',
                'db_table': 'imagen_vehiculo',
                'ordering': ['vehiculo', '-portada'],
            },
        ),
        migrations.AddIndex(
            model_name='vehiculo',
            index=models.Index(fields=['disponible', 'activo'], name='vehiculo_disponi_106f66_idx'),
        ),
        migrations.AddIndex(
            model_name='vehiculo',
            index=models.Index(fields=['marca', 'modelo'], name='vehiculo_marca_f892df_idx'),
        ),
        migrations.AddIndex(
            model_name='vehiculo',
            index=models.Index(fields=['matricula'], name='vehiculo_matricu_6d49d3_idx'),
        ),
        migrations.AddIndex(
            model_name='tarifavehiculo',
            index=models.Index(fields=['vehiculo', 'fecha_inicio', 'fecha_fin'], name='idx_tarifa_vehiculo_periodo'),
        ),
        migrations.AlterUniqueTogether(
            name='tarifavehiculo',
            unique_together={('vehiculo', 'fecha_inicio')},
        ),
        migrations.AddIndex(
            model_name='mantenimiento',
            index=models.Index(fields=['vehiculo', 'fecha'], name='mantenimien_vehicul_2510b5_idx'),
        ),
        migrations.AddIndex(
            model_name='imagenvehiculo',
            index=models.Index(fields=['vehiculo', 'portada'], name='imagen_vehi_vehicul_af9d3a_idx'),
        ),
    ]
