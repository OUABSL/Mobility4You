services:
  postgres:
    image: postgres:16-alpine
    container_name: mobility4you_postgres_16
    environment:
      POSTGRES_DB: mobility4you_db
      POSTGRES_USER: mobility4you_db_user
      POSTGRES_PASSWORD: superseguro_postgres_render
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_16:/var/lib/postgresql/data
      - ./scripts/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready -U mobility4you_db_user -d mobility4you_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mobility4you_network

  redis:
    image: redis:7-alpine
    container_name: mobility4you_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mobility4you_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.render
    container_name: mobility4you_backend
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    volumes:
      - backend_static:/app/staticfiles
      - backend_media:/app/media
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mobility4you_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mobility4you_frontend
    env_file:
      - ./frontend/.env
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - mobility4you_network

volumes:
  postgres_data_16:
  redis_data:
  backend_static:
  backend_media:

networks:
  mobility4you_network:
    driver: bridge
